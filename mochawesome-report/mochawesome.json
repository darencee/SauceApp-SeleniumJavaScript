{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-17T13:07:23.604Z",
    "end": "2022-11-17T13:07:49.042Z",
    "duration": 25438,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "52f622f9-2367-4da3-b4d1-f47027525386",
      "title": "",
      "fullFile": "/home/darencee/myProjects/sauceApp/testCases/login.spec.js",
      "file": "/testCases/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
          "title": "login scenario test cases",
          "fullFile": "/home/darencee/myProjects/sauceApp/testCases/login.spec.js",
          "file": "/testCases/login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login scenario test cases\"",
              "fullTitle": "login scenario test cases \"before each\" hook in \"login scenario test cases\"",
              "timedOut": false,
              "duration": 1676,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().withCapabilities(capabilities).build();\nloginPage = new LoginPage(driver);\nnavigation = new Navigation(driver);\nproductsPage = new ProductsPage(driver);\nloginData = new LoginData(driver);\nglobalElements = new GlobalElements(driver);\nawait driver.get(loginData.applicationUnderTestUrl);\nawait driver.manage().window().maximize();",
              "err": {},
              "uuid": "10dafe4a-3daf-4f33-9eb8-2b7084789907",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login scenario test cases\"",
              "fullTitle": "login scenario test cases \"after each\" hook in \"login scenario test cases\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "9b8f12fa-7365-4865-a6e2-475dcc48c35c",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login using valid credentials",
              "fullTitle": "login scenario test cases should login using valid credentials",
              "timedOut": false,
              "duration": 7304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.loginWithData(loginData.standardUser, loginData.password);\nexpect(await driver.findElement(By.xpath(productsPage.productSortButton))).to.exist;\nawait navigation.logout();\nawait loginPage.loginWithData(loginData.problemUser, loginData.password);\nexpect(await driver.findElement(By.xpath(productsPage.productSortButton))).to.exist;\nawait navigation.logout();\nawait loginPage.loginWithData(loginData.performanceGlitchUser, loginData.password);\nexpect(await driver.findElement(By.xpath(productsPage.productSortButton))).to.exist;",
              "err": {},
              "uuid": "ff1baba2-14c4-440f-b8b3-4046c2464b9d",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login using invalid credentials",
              "fullTitle": "login scenario test cases should login using invalid credentials",
              "timedOut": false,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.loginWithData(loginData.invalidUsername, loginData.invalidPassword);\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;\n// note for myself: try to find a workaround around the nested elements to validate the text",
              "err": {},
              "uuid": "5dbc3588-5fe8-4981-8d2f-0c8fe496cf41",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login with a valid username and an invalid password",
              "fullTitle": "login scenario test cases should login with a valid username and an invalid password",
              "timedOut": false,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.loginWithData(loginData.standardUser, loginData.invalidPassword);\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;",
              "err": {},
              "uuid": "a92a3b61-a3c7-47e2-96c5-14869f6dec13",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login without providing any credentials",
              "fullTitle": "login scenario test cases should login without providing any credentials",
              "timedOut": false,
              "duration": 1206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.loginWithData(\"\", \"\");\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;\nawait driver.get(loginData.applicationUnderTestUrl); // clear() is too slow and logs me in so I have to navigate to the app again\nawait loginPage.loginWithData(loginData.standardUser, \"\");\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;\nawait driver.get(loginData.applicationUnderTestUrl);\nawait loginPage.loginWithData(\"\", loginData.password);\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;",
              "err": {},
              "uuid": "f77416ab-0885-4e60-9140-ee46d30de5fc",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login with keyboard keys",
              "fullTitle": "login scenario test cases should login with keyboard keys",
              "timedOut": false,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.actions().keyDown(Key.TAB).sendKeys(loginData.standardUser).perform();\nawait driver.actions().keyDown(Key.TAB).sendKeys(loginData.password).perform();\nawait driver.actions().keyDown(Key.TAB).perform();\nawait driver.actions().keyDown(Key.ENTER).perform();\nexpect(await driver.findElement(By.xpath(productsPage.productSortButton))).to.exist;",
              "err": {},
              "uuid": "d552a9e8-e853-4977-93c0-7a53b832f01a",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate correct placeholders on the input fields",
              "fullTitle": "login scenario test cases should validate correct placeholders on the input fields",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const placeholderTextUsernameField = await driver.findElement(By.id(loginPage.usernameInputField)).getAttribute(\"placeholder\");\nconst placeholderTextPasswordField = await driver.findElement(By.id(loginPage.passwordInputField)).getAttribute(\"placeholder\");\nexpect(placeholderTextUsernameField).to.eq(\"Username\");\nexpect(placeholderTextPasswordField).to.eq(\"Password\");",
              "err": {},
              "uuid": "03dd1359-24eb-466d-9909-61d48985e488",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login with a locked out account",
              "fullTitle": "login scenario test cases should login with a locked out account",
              "timedOut": false,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.loginWithData(loginData.lockedOutUser, loginData.password);\nexpect(await driver.findElement(By.xpath(globalElements.errorMessage))).to.exist;",
              "err": {},
              "uuid": "a94b2077-b711-4f33-89f5-fa55a3b44522",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the number of unsuccessful login attempts",
              "fullTitle": "login scenario test cases should validate the number of unsuccessful login attempts",
              "timedOut": false,
              "duration": 1494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.id(loginPage.usernameInputField)).sendKeys(loginData.standardUser);\nfor (let i = 0; i < 10; i++) {\n    await driver.findElement(By.id(loginPage.passwordInputField)).sendKeys(\"q\");\n    await driver.findElement(By.id(loginPage.loginButton)).click();\n}\n// no message that the account has been locked out for the huge number of unsuccessful login attempts\n// can be considered as an anomaly",
              "err": {},
              "uuid": "36ca38e3-0427-4e94-9668-8e353db98fae",
              "parentUUID": "01719b6a-aa28-4fa9-8add-f325bc60a1f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff1baba2-14c4-440f-b8b3-4046c2464b9d",
            "5dbc3588-5fe8-4981-8d2f-0c8fe496cf41",
            "a92a3b61-a3c7-47e2-96c5-14869f6dec13",
            "f77416ab-0885-4e60-9140-ee46d30de5fc",
            "d552a9e8-e853-4977-93c0-7a53b832f01a",
            "03dd1359-24eb-466d-9909-61d48985e488",
            "a94b2077-b711-4f33-89f5-fa55a3b44522",
            "36ca38e3-0427-4e94-9668-8e353db98fae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12424,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}